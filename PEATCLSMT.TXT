Notes on the workflow from updating CLSM for tropical peatlands (PEATCLSMT) to evaluating the output with in situ data.
Michel Bechtold, Sebastian Apers

PEATCLSM implemented into SMAP version 4 and new parameters for tropical peatlands

New model version (SMAP Version 4):
/data/leuven/314/vsc31402/src_code/GEOS5_LDASsa/LDASsa_m3-16_6_p2

copied and compiled for KUL genius (see LDASsa documentation)
- - >
/data/leuven/317/vsc31786/src_code/GEOS5_LDASsa/LDASsa_m3-16_6_p2_KULG

Implementation of PEATCLSM
/data/leuven/317/vsc31786/src_code/GEOS5_LDASsa/LDASsa_m3-16_6_p2_KULG_PEATCLSM_v4.0

Three experiments:
Exp1: CLSM (SMAP version 4)
Exp2: PEATCLSM-P (SMAP version 4)
Exp3: PEATCLSM-T (SMAP version 4) (3a=Natural (TN) and 3b = Drained (TD))

bcs (“boundary conditions”)
Exp1: /staging/leuven/stg_00024/l_data/model_param/geos5/bcs/Icarus-NLv2/Icarus-NLv2_EASE_PEATMAP_CLSM/SMAP_EASEv2_M09/
Exp2: /data/leuven/317/vsc31786/src_code/AGCMparam_from_Sarith_20170717_KUL/Icarus-NLv2_EASE_PEATMAP_PEATCLSM/SMAP_EASEv2_M09/
Exp3a: /data/leuven/317/vsc31786/src_code/AGCMparam_from_Sarith_20170717_KUL/Icarus-NLv2_EASE_PEATMAP_PEATCLSMTN/SMAP_EASEv2_M09/
Exp3b: /data/leuven/317/vsc31786/src_code/AGCMparam_from_Sarith_20170717_KUL/Icarus-NLv2_EASE_PEATMAP_PEATCLSMTD/SMAP_EASEv2_M09/

mkcatchparam: Make catchment model parameters
Source code (now compiled for genius): /data/leuven/317/vsc31786/src_code/GEOS5_AGCMparam/H54p3_v24C05_GOSWIM_zerodiff_KULG_peat_v3.3

directory for parameter generation (only peat grid cells will be updated)
/data/leuven/317/vsc31786/src_code/AGCMparam_from_Sarith_20170717_KUL

output will be used to update existing PEATCLSM bcs files on staging:
/staging/leuven/stg_00024/l_data/model_param/geos5/bcs/Icarus-NLv2/Icarus-NLv2_EASE_PEATMAP_PEATCLSM/SMAP_EASEv2_M09/clsm/

for mkcatchparam change parameters in 
Woesten parameters table
cti_stats.dat

build bcs from Sarith with PEATMAP and replace lines in 
tau_param.dat 
ts.dat
ar.new (output from r-script)
bf.dat (output from r-script)
soil_param.dat (wilting point only)






Postprocessing of CLSM and data assimilation output. All done with python.

Conda is a package manager for programming languages (miniconda, small version of it, sufficient for us). It seems to be the most convenient that we use the same environment for python. It is activated in a bash shell with:
source /data/leuven/317/vsc31786/miniconda/bin/activate py3

Pycharm is a python editor (e.g. for debugging etc.). 
Installation: 
wget http://download.jetbrains.com/python/pycharm-community-2019.2.4.tar.gz -O pycharm.tar.gz
tar -xzf pycharm.tar.gz
rm -f pycharm.tar.gz

Add bin directory to .bashrc (or .bash_profile):
export PATH="data/leuven/317/vsc31786/miniconda/bin:$PATH"
export PYTHONPATH="/data/leuven/324/vsc32460/python:$PYTHONPATH"
export PATH="/data/leuven/324/vsc32460/pycharm/bin:$PATH"

getting packages from github:
create a python directory on your data disk and in there run
git clone ssh://git@github.com/mbechtold/pyldas.git
git clone ssh://git@github.com/mbechtold/bat_pyldas.git

pyldas:
python package for the Land Data Assimilation System (LDAS) 
used e.g. for bin2netcdf, …

bat_pyldas:
batchscripts, some modified pyldas functions for peatland projects




------------------
## temporary
ToDos:
- Black list --> mastertable
- Run Indonesia with cascade
- include more variables (P, PAR, T, ...) in output collection
- stress function of Nothern peatlands used (disable 


